<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="keywords" content="maintenance" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>系統維修頁</title>
    <style>
      body {
        margin: 0;
        padding: 0;
      }
      .container {
        margin: 0 auto;
        margin-top: 119px;
        text-align: center;
        font-family: "PingFang TC", "Noto Sans", sans-serif;
        font-size: 14px;
        box-sizing: border-box;
      }
      img {
        width: 200px;
      }

      .title {
        margin: 30px 0px;
        font-size: 20px;
        line-height: 28.96px;
        font-weight: 700;
      }
      .content {
        margin: 0;
        margin-top: 10px;
        margin-bottom: 30px;
        line-height: 20px;
      }

      .time-hide {
        display: none;
      }
      .time {
        font-weight: 700;
        font-size: 16px;
        color: #ffb400;
      }

      @media screen and (min-width: 420px) {
        .container {
          width: 420px;
          margin-left: auto;
          margin-right: auto;
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h3 class="title">系統維護中</h3>
      <div id="timeContainer">
        <span id="startDate" class="time"></span>
        <span class="time"> ~ </span>
        <span id="endDate" class="time"> </span> 止
      </div>
      <p class="content">
        為提供更優質的服務，目前系統暫停服務<br />請稍後再回來，謝謝您！
      </p>
      <img
        src="https://storage.googleapis.com/static.litloyal.com/base/img/liff-maintenance.png"
      />
    </div>

    <script>
      const appendDiv = (parent, child) => {
        parent.appendChild(child);
      };

      const addStyle = (elem, classname) => {
        elem.classList.add(classname);
      };

      const displayDate = (content, elemID) => {
        if (!content) return;
        const dateBlock = document.getElementById(elemID);
        let dateContent = document.createTextNode(content);
        appendDiv(dateBlock, dateContent);
      };

      const dateFormatter = (time) => {
        const reg = new RegExp(/^\d{10}$/);
        if (!reg.test(time)) return;

        const timeFormat = new Date(parseInt(time) * 1000);
        let year = timeFormat.getFullYear();
        let month = timeFormat.getMonth() + 1;
        let date = timeFormat.getDate();
        let hour = timeFormat.getHours();
        let minute = timeFormat.getMinutes();
        if (month < 10) month = `0${month}`;
        if (hour < 10) hour = `0${hour}`;
        if (minute < 10) minute = `0${minute}`;

        return `${year}/${month}/${date}  ${hour}:${minute}`;
      };

      const main = () => {
        let startDate = "${MAINTENANCE_START_DATE}";
        let endDate = "${MAINTENANCE_END_DATE}";
        startDate && displayDate(dateFormatter(startDate), "startDate");
        endDate && displayDate(dateFormatter(endDate), "endDate");
        if (!startDate && !endDate) {
          const timeContainer = document.getElementById("timeContainer");
          addStyle(timeContainer, "time-hide");
        }
      };

      main();
    </script>
  </body>
</html>
